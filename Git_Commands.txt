git config --global user.name "имя пльзователя"
git config --global user.email "почтовый ящик пользователя"		основные настройки GIT
git config --list --global	просмотреть настройки GIT


git clone <remoteURL> — клонирование удаленного репозитория на локальный комп;

git init — создание нового репозитория в текущей папке; 

git status- статус файлов GIT


git add FileName.json		индексация конкретного файла FileName.json
git add . 					индексация всех файлов репозитория



git commit -m "сообщение которое описывает коммит"
git commit --amend			 — изменение последнего коммита;
git commit -a				добавление в коммит всех непроиндексированых файлов(git add . +  git commit )
git commit --amend			изменить сообщение последнего коммита



git push						загрузка изменений на удаленный сервер
git push <remote> <branch>		 — отправка ветки на удаленный сервер;
git push <remote> :<branch>		 — удаление ветки на удаленном сервере;
git push origin :<branchName> 	 -удаление ветки на локальном сервере;
git push <remote> <tag>			 — обмен метками;
git push -u origin BranchName 		-(создать новую ветку)устанавливаете связь между 
	той веткой, в которой вы находитесь и веткой master на удалённом сервере. Команду требуется выполнить единожды,
	чтобы потом можно было отправлять/принимать изменения лишь выполняя git push из ветки без указания всяких
	алиасов для сервера и удалённых веток
	
git push origin --delete NameBranch	-удалить ветку на удалённом сервере
git push origin --all				-запушить все ветки
git push --set-upstream origin NameBranch		-делается при первом пуше ветки ( устанавливается связь
	между удаленной и локальной веткой)




git pull (git fetch + git merge)
git pull <remote> <branch> — получение данных из удаленного репозитория и слияние с локальным;

git fetch	загрузка изменений с сервера на локальный

git merge	слияние веток(скачаных с удаленного репозитория и веток на локальном компьютере  )
git merge <branch> — слияние 2 веток;(нужно находиться в той ветке в которую будет происходить слияние)
git merge --abort	скачиваем конфликтные изменения на локальную машину





git log — просмотр истории коммитов;(q для выхода)
git log --author AuthorName		посмотреть все коммиты которые делал етот автор
опции
-(n)Показывает только последние n коммитов.
--since, --after	Показывает только те коммиты, которые были сделаны после указанной даты.
--until, --before	Показывает только те коммиты, которые были сделаны до указанной даты.
--author	Показывает только те коммиты, в которых запись author совпадает с указанной строкой.
--committer	Показывает только те коммиты, в которых запись committer совпадает с указанной строкой.
--grep	Показывает только коммиты, сообщение которых содержит указанную строку.
-S	Показывает только коммиты, в которых изменение в коде повлекло за собой добавление или удаление указанной строки.





git branch <branch> 			— создание новой ветки;
git branch –d <branch> 			— удаление ветки;
git branch						- Посмотреть локальные ветки(список веток)
git branch –a					- посмотреть все существующие локальные и удаленные ветки 
git branch -m <oldname> <newname>	Переименовать ветку



git checkout BranchName			перейти в ветку	
git checkout -b   BranchName		создать ветку и перейти в нее
git checkout хэш_коммита		перейти в коммит по хэшу
git checkout <Имя файла>		отменяет изменения в файле
git checkout .					откат изменений во всех файлах



stash					временное хранилище изменений в файле
git stash				сохраняет неподтвержденные изменения (индексированные и неиндексированные) в 
						отдельном хранилище, чтобы вы могли вернуться к ним позже
git stash pop		применить ранее отложенные изменения
git stash clear		удаляет все наборы отложенных изменений
git stash -u		позволяет отложить неотслеживаемые файлы
git stash show		просмотреть сводные данные по набору отложенных изменений





git remote 			— отображение подключений к удаленным репозиториям;
git remote			Список удаленных подключений к другим репозиториям.
git remote -v		список подключений но уже с URL 





 blame		отображение метаданных автора, связанных со строками, которые были внесены в файл при коммите.
git blame FileName		посмотреть когда и кем редактировалась каждая строка файла в последний раз





diff				функция сравнения изменений
git diff			просмотр всех изменений
git diff FileName	просмотр всех изменений в конкретном файле




git show хэш		для просмотра информации о метке или коммите(какие изменения проводились)




git log							посмотреть все коммиты которые производились(q -для выхода)
git log --author NameAuthor		посмотреть все коммиты которые делал автор




git rm	 	для удаления файлов из индекса и рабочей директории

git mv		(переместить файл, а затем выполнить git add для нового файла и git rm для старого)









git tag 	— просмотр меток;



git cat-file -t
git cat-file -p



ssh keygen -t rsa -c 
